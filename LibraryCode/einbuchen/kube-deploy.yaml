---

apiVersion: v1
kind: Service
metadata:
  name: einbuchen-intern
spec:
  ports:
  - port: 80
    name: web
  selector:
    app: einbuchen
    role: backend
    scs: einbuchen

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: varnish-for-einbuchen
data:
  default.vcl: |-
    vcl 4.0;
    backend default {
        .host = "localhost";
        .port = "80";
    }
    backend assets {
        .host = "assets";
        .port = "80";
    }
    sub vcl_backend_response {
        set beresp.do_esi = true;
    }
    sub vcl_recv {
        if (req.http.host == "assets") {
            set req.backend_hint = assets;
        } else {
            set req.backend_hint = default;
        }
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: einbuchen-config
data:
  MONGO_SERVER: "mongo"
  INTERFACE: "0.0.0.0"
  PORT: "80"

---

apiVersion: v1
kind: Service
metadata:
  name: einbuchen-extern
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: web
  selector:
    app: einbuchen
    role: backend
    scs: einbuchen

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: einbuchen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: einbuchen
      role: backend
      scs: einbuchen
  template:
    metadata:
      labels:
        app: einbuchen
        role: backend
        scs: einbuchen
    spec:
      initContainers:
      - name: config-creator
        image: busybox
        envFrom:
        - configMapRef:
            name: einbuchen-config
        command: ['/bin/sh', '-c', 'echo {\"mongoes\": {\"mongouri\": \"mongodb://$MONGO_SERVER:27017/einbuchen\"},\"bind-interface\": \"$INTERFACE\",\"bind-port\": \"$PORT\"} > /config/config.json']
        volumeMounts:
         - name: config-volume
           mountPath: /config
      containers:
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.6.0
        args: ["--collector.host-port=jaeger-collector:14267"]
      - name: varnish-esi
        image: million12/varnish
        env:
          - name: VCL_CONFIG
            value: /etc/varnish/default.vcl
          - name: VARNISHD_PARAMS
            value: -a 0.0.0.0:8080
        volumeMounts:
          - name: varnish-config-volume
            mountPath: /etc/varnish/
      - name: einbuchen
        image: containerbootcamp/einbuchen
        command:
        - /einbuchen 
        - -conf 
        - /etc/config/config.json
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
      volumes:
        - name: config-volume
          emptyDir: {}
        - name: varnish-config-volume
          configMap:
            name: varnish-for-einbuchen

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: einbuchen
spec:
  rules:
  - host: trainer.ch.innoq.io
    http:
      paths:
      - path: /einbuchen
        backend:
          serviceName: einbuchen-extern
          servicePort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: einbuchen-crest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: einbuchen-crest
      role: backend
      scs: einbuchen
  template:
    metadata:
      labels:
        app: einbuchen-crest
        role: backend
        scs: einbuchen
    spec:
      initContainers:
      - name: config-creator
        image: busybox
        envFrom:
        - configMapRef:
            name: einbuchen-config
        command: ['/bin/sh', '-c', 'echo {\"db\": {\"port\": 27017,\"host\": \"$MONGO_SERVER\"},\"server\": {\"port\": 3500,\"address\": \"0.0.0.0\"},\"flavor\": \"mongodb\",\"debug\": true} > /config/config.json']
        volumeMounts:
         - name: config-volume
           mountPath: /config
      containers:
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.6.0
        args: ["--collector.host-port=jaeger-collector:14267"]
      - name: crest
        image: containerbootcamp/crest
        ports:
        - containerPort: 3500
          protocol: TCP
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
      volumes:
        - name: config-volume
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: einbuchen-crest
spec:
  ports:
  - port: 3500
    name: web
  selector:
    app: einbuchen-crest
    role: backend
    scs: einbuchen
