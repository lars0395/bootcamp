---

apiVersion: v1
kind: ConfigMap
metadata:
  name: varnish-for-suchen
data:
  default.vcl: |-
    vcl 4.0;
    backend default {
        .host = "localhost";
        .port = "80";
    }
    backend assets {
        .host = "assets";
        .port = "80";
    }
    sub vcl_backend_response {
        set beresp.do_esi = true;
    }
    sub vcl_recv {
        if (req.http.host == "assets") {
            set req.backend_hint = assets;
        } else {
            set req.backend_hint = default;
        }
    }

---

apiVersion: v1
kind: Service
metadata:
  name: suchen
  labels:
    app: suchen
    role: frontend
    scs: suchen
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: web
  selector:
    app: suchen
    role: frontend
    scs: suchen

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: suchen
  labels:
    app: suchen
    role: frontend
    scs: suchen
spec:
  replicas: 1
  selector:
    matchLabels:
      app: suchen
      role: frontend
      scs: suchen
  template:
    metadata:
      labels:
        app: suchen
        role: frontend
        scs: suchen
    spec:
      containers:
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.6.0
        args: ["--collector.host-port=jaeger-collector:14267"]
      - name: varnish-esi
        image: million12/varnish
        env:
          - name: VCL_CONFIG
            value: /etc/varnish/default.vcl
          - name: VARNISHD_PARAMS
            value: -a 0.0.0.0:8080
        volumeMounts:
          - name: varnish-config-volume
            mountPath: /etc/varnish/
      - name: node-suchen
        image: containerbootcamp/node-suchen
        env:
        - name: URI_PREFIX
          value: "/suchen"
        - name: ES_URI
          value: "https://elasticsearch-suchen:9200"
      volumes:
        - name: varnish-config-volume
          configMap:
            name: varnish-for-suchen

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: suchen
  labels:
    app: suchen
    role: frontend
    scs: suchen
spec:
  rules:
  - host: trainer.ch.innoq.io
    http:
      paths:
      - path: /suchen
        backend:
          serviceName: suchen
          servicePort: 80
